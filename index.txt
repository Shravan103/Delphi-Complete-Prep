unit LibraryPublicationfm;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ComCtrls, Vcl.StdCtrls, Vcl.ExtCtrls;

type
  TBook = class
  public
    Title: string;
    Author: string;
    Price: Double;
    PublicationDate: TDateTime;
    PageCount: Integer;
  end;

  TFictionBook = class(TBook)
  public
    HasPlotTwist: Boolean;
  end;

  TScienceBook = class(TBook)
  public
    SubjectArea: string;
  end;

  THorrorBook = class(TBook)
  public
    FearElement: string;
  end;

  TLibraryPub = class(TForm)
    PanelLibrary: TPanel;
    LblLibraryPublicationHeader: TLabel;
    LblTitle: TLabel;
    EditTitle: TEdit;
    LblAuthor: TLabel;
    EditAuthor: TEdit;
    LabelPrice: TLabel;
    EditPrice: TEdit;
    LblGenre: TLabel;
    ComboBoxGenre: TComboBox;
    AddEntry: TButton;
    ShowEntry: TButton;
    LblDOP: TLabel;
    DateTimePicker1: TDateTimePicker;
    CheckBoxHasPlotTwist: TCheckBox;
    EditSubjectArea: TEdit;
    ComboBoxFearElement: TComboBox;
    LblSubArea: TLabel;
    LblFearElement: TLabel;
    LblNoOfPgs: TLabel;
    EditNoOfPags: TEdit;
    procedure AddEntryClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure ShowEntryClick(Sender: TObject);
    procedure ComboBoxGenreChange(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  LibraryPub: TLibraryPub;
  BookTextList: TStringList;

implementation

{$R *.dfm}

// OnClick of "Add Entry" add the entry to class.
procedure TLibraryPub.AddEntryClick(Sender: TObject);
var
  L_NewBook: TBook;
  L_Genre, BookEntry: string;
begin
  L_Genre := ComboBoxGenre.Text;

  if L_Genre = 'Fiction' then
  begin
    L_NewBook := TFictionBook.Create;
    with TFictionBook(L_NewBook) do
    begin
      Title := EditTitle.Text;
      Author := EditAuthor.Text;
      Price := StrToFloat(EditPrice.Text);
      PublicationDate := DateTimePicker1.Date;
      PageCount := StrToInt(EditNoOfPags.Text);
      HasPlotTwist := CheckBoxHasPlotTwist.Checked;

      BookEntry := 'Title=' + Title +
        '; Author=' + Author +
        '; Price=' + FloatToStr(Price) +
        '; Date=' + DateToStr(PublicationDate) +
        '; Pages=' + IntToStr(PageCount) +
        '; Genre=' + L_Genre +
        '; PlotTwist=' + BoolToStr(HasPlotTwist, True);
      BookTextList.Add(BookEntry);
    end;
  end
  else if L_Genre = 'Science' then
  begin
    L_NewBook := TScienceBook.Create;
    with TScienceBook(L_NewBook) do
    begin
      Title := EditTitle.Text;
      Author := EditAuthor.Text;
      Price := StrToFloat(EditPrice.Text);
      PublicationDate := DateTimePicker1.Date;
      PageCount := StrToInt(EditNoOfPags.Text);
      SubjectArea := EditSubjectArea.Text;

      BookEntry := 'Title=' + Title +
        '; Author=' + Author +
        '; Price=' + FloatToStr(Price) +
        '; Date=' + DateToStr(PublicationDate) +
        '; Pages=' + IntToStr(PageCount) +
        '; Genre=' + L_Genre +
        '; SubjectArea=' + SubjectArea;
      BookTextList.Add(BookEntry);
    end;

  end
  else if L_Genre = 'Horror' then
  begin
    L_NewBook := THorrorBook.Create;
    with THorrorBook(L_NewBook) do
    begin
      Title := EditTitle.Text;
      Author := EditAuthor.Text;
      Price := StrToFloat(EditPrice.Text);
      PublicationDate := DateTimePicker1.Date;
      PageCount := StrToInt(EditNoOfPags.Text);
      FearElement := ComboBoxFearElement.Text;

      BookEntry := 'Title=' + Title +
        '; Author=' + Author +
        '; Price=' + FloatToStr(Price) +
        '; Date=' + DateToStr(PublicationDate) +
        '; Pages=' + IntToStr(PageCount) +
        '; Genre=' + L_Genre +
        '; FearElement=' + FearElement;
      BookTextList.Add(BookEntry);
    end;
  end;
  ShowMessage('Book entry added successfully!');
end;

// OnCreate of Form:
procedure TLibraryPub.FormCreate(Sender: TObject);
begin
    if BookTextList = nil then
      BookTextList := TStringList.Create;
end;


// OnClick of "Show Entries" display all the book details.
 procedure TLibraryPub.ShowEntryClick(Sender: TObject);
var
  DisplayForm: TForm;
  MemoDisplay: TMemo;
  i: Integer;
begin
  DisplayForm := TForm.Create(Self);
  try
    DisplayForm.Caption := 'Book Entries';
    DisplayForm.Width := 600;
    DisplayForm.Height := 400;
    DisplayForm.Position := poScreenCenter;

    MemoDisplay := TMemo.Create(DisplayForm);
    MemoDisplay.Parent := DisplayForm;
    MemoDisplay.Align := alClient;
    MemoDisplay.ScrollBars := ssVertical;
    MemoDisplay.ReadOnly := True;
    MemoDisplay.Lines.Add('--- Book Entries ---');

    for i := 0 to BookTextList.Count - 1 do
      MemoDisplay.Lines.Add(BookTextList[i]);

    DisplayForm.ShowModal;
  finally
    DisplayForm.Free;
  end;
end;

// OnChange of "Combo Box":
procedure TLibraryPub.ComboBoxGenreChange(Sender: TObject);
begin
  if ComboBoxGenre.Text = 'Fiction' then
  begin
    CheckBoxHasPlotTwist.Enabled := True;
    EditSubjectArea.Enabled := False;
    ComboBoxFearElement.Enabled := False;
  end
  else if ComboBoxGenre.Text = 'Science' then
  begin
    CheckBoxHasPlotTwist.Enabled := False;
    EditSubjectArea.Enabled := True;
    ComboBoxFearElement.Enabled := False;
  end
  else if ComboBoxGenre.Text = 'Horror' then
  begin
    CheckBoxHasPlotTwist.Enabled := False;
    EditSubjectArea.Enabled := False;
    ComboBoxFearElement.Enabled := True;
  end
  else
  begin
    CheckBoxHasPlotTwist.Enabled := False;
    EditSubjectArea.Enabled := False;
    ComboBoxFearElement.Enabled := False;
  end;
end;



end.
